# -*- coding: utf-8 -*-
"""Disney+Hotstar_data_analysis.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1xWISycI7_IoVUpcj-9HuU_zTPsZAgP-0
"""

import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns

file_path = '/content/disney_plus_shows.csv'

disney_data = pd.read_csv(file_path)

disney_data['runtime'] = disney_data['runtime'].str.extract('(\d+)').astype(float)

disney_data['imdb_votes'] = disney_data['imdb_votes'].str.replace(',', '').astype(float)

disney_data['rated'] = disney_data['rated'].fillna('Not Rated')
disney_data['imdb_rating'] = disney_data['imdb_rating'].fillna(disney_data['imdb_rating'].mean())

disney_data['main_genre'] = disney_data['genre'].str.split(',').str[0]

# 3.5 Extract release year
disney_data['release_year'] = disney_data['year'].str.extract('(\d{4})').astype(float)

# Step 4: Exploratory Analysis and Visualizations
# Set visualization style
sns.set(style="whitegrid")

# Updated bar plot for content type distribution
plt.figure(figsize=(6, 4))
sns.barplot(x=type_counts.index, y=type_counts.values, color='skyblue')
plt.title("Distribution of Content by Type")
plt.xlabel("Type")
plt.ylabel("Count")
plt.show()

plt.figure(figsize=(8, 5))
sns.boxplot(data=disney_data, x='type', y='imdb_rating', color='orange')
plt.title("IMDb Ratings by Type")
plt.xlabel("Type")
plt.ylabel("IMDb Rating")
plt.show()

genre_counts = disney_data['main_genre'].value_counts().head(10)
plt.figure(figsize=(10, 6))
sns.barplot(x=genre_counts.values, y=genre_counts.index, color='yellow')
plt.title("Top 10 Genres by Count")
plt.xlabel("Count")
plt.ylabel("Genre")
plt.show()

content_by_year = disney_data.groupby(['release_year', 'type']).size().unstack()

# Plot trends in content by year with distinct colors for movies and shows
plt.figure(figsize=(10, 6))
content_by_year.plot(kind='line', marker='o', figsize=(10, 6), colormap='tab10')
plt.title("Trends in Content by Year")
plt.xlabel("Year")
plt.ylabel("Count")
plt.legend(title="Type")
plt.grid()
plt.show()

top_rated_by_genre = disney_data.loc[disney_data.groupby('main_genre')['imdb_rating'].idxmax()]
print("Top-Rated Content by Genre:")
print(top_rated_by_genre[['main_genre', 'title', 'imdb_rating', 'type']])

disney_data['award_count'] = disney_data['awards'].notna().astype(int)
award_ratings_corr = disney_data[['award_count', 'imdb_rating']].corr().iloc[0, 1]
print(f"\nCorrelation between Awards and IMDb Ratings: {award_ratings_corr:.2f}")

plt.figure(figsize=(8, 5))
sns.histplot(disney_data['imdb_rating'], bins=20, kde=True, color='purple')
plt.title("Distribution of IMDb Ratings")
plt.xlabel("IMDb Rating")
plt.ylabel("Frequency")
plt.grid()
plt.show()

plt.figure(figsize=(10, 6))
sns.scatterplot(data=disney_data, x='imdb_votes', y='imdb_rating', hue='type', alpha=0.6, palette='coolwarm')
plt.title("Relationship Between IMDb Votes and Ratings")
plt.xlabel("IMDb Votes")
plt.ylabel("IMDb Rating")
plt.legend(title="Type")
plt.grid()
plt.show()

plt.figure(figsize=(10, 6))
sns.boxplot(data=disney_data, x='type', y='runtime', color='brown')
plt.title("Runtime Distribution by Content Type")
plt.xlabel("Type")
plt.ylabel("Runtime (Minutes)")
plt.grid()
plt.show()

# 4. Top Rated Content by Genre
top_genres = disney_data.groupby('main_genre')['imdb_rating'].mean().sort_values(ascending=False).head(10)
plt.figure(figsize=(10, 6))
sns.barplot(x=top_genres.values, y=top_genres.index, palette='mako')
plt.title("Top Genres by Average IMDb Rating")
plt.xlabel("Average IMDb Rating")
plt.ylabel("Genre")
plt.grid()
plt.show()

rated_counts = disney_data['rated'].value_counts()
plt.figure(figsize=(40, 35))
rated_counts.plot(kind='pie', autopct='%1.1f%%', startangle=140, colormap='Set3')
plt.title("Proportion of Rated Content")
plt.ylabel("")  # Remove default ylabel
plt.show()

